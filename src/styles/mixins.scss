@import 'variables';

@mixin responsive($size) {
    @if $size == large {
        @media only screen and (min-width: #{$breakpoint-large + 1}px) {
            @content;
        }
    }
    @else if $size == medium {
        @media only screen and (min-width: #{$breakpoint-tablet + 1}px) and (max-width: #{$breakpoint-large}px) {
            @content;
        }
    }
    @else if $size == tablet {
        @media only screen and (min-width: #{$breakpoint-mobile + 1}px) and (max-width: #{$breakpoint-tablet}px) {
            @content;
        }
    }
    @else if $size == mobile {
        @media only screen and (max-width: #{$breakpoint-tablet - 1}px) {
            @content;
        }
    }
}

@mixin fontStyles($font, $size, $weight, $color, $spacing: 0) {
    font-family: $font !important;
    font-size: $size !important;
    font-weight: $weight !important;
    color: $color !important;
    letter-spacing: $spacing !important;
}

@mixin linear-gradient($direction, $colors) {
    $list: ();
    @for $i from 1 through length($colors) {
        $list: append($list, nth($colors, $i), comma);
    }
    @if map-has-key($map-for-directions, $direction) {
        background: linear-gradient(
            map-get($map-for-directions, $direction),
            $list
        );
    } @else if not map-has-key($map-for-directions, $direction) {
        @if not index("deg", unit($direction)) {
            @error "#{$direction} is a wrong value for the $direction parameter. The value must be eighter a number followed by the 'deg' unit or one of the followings: #{map-keys($map-for-directions)}.";
        } @else {
            background: linear-gradient($direction, $list);
        }
    }
}
